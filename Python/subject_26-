# -*- coding:utf-8 -*-
class TreeNode:
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None


class Solution:
    """
    树的子结构
    """
    def HasSubtree(self, pRoot1, pRoot2):
        # write code here
        result = False
        if pRoot1 is not None and pRoot2 is not None:
            if pRoot1.val == pRoot2.val:
                result = self.isTree1HasTree2(pRoot1, pRoot2)
            if not result:
                result = self.HasSubtree(pRoot1.left, pRoot2)
            if not result:
                result = self.HasSubtree(pRoot1.right, pRoot2)

        return result

    def isTree1HasTree2(self, p1, p2):
        if p2 is None:
            return True
        if p1 is None:
            return False

        if p1.val != p2.val:
            return False

        return self.isTree1HasTree2(p1.left, p2.left) & self.isTree1HasTree2(p1.right, p2.right)
