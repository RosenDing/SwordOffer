# -*- coding:utf-8 -*-
class TreeNode:
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None

class Solution:
    """
    二叉树的镜像
    """
    # 返回镜像树的根节点
    def Mirror(self, root):
        # write code here
        if root is None:
            return
        if root.left is None and root.right is None:
            return
        tmp_node = root.left
        root.left = root.right
        root.right = tmp_node

        if root.left is not None:
            self.Mirror(root.left)
        if root.right is not None:
            self.Mirror(root.right)

if __name__ == '__main__':
    solution = Solution()
    node_01 = TreeNode(1)
    node_02 = TreeNode(2)
    node_03 = TreeNode(3)
    node_04 = TreeNode(4)
    node_05 = TreeNode(5)
    node_01.left = node_02
    node_01.right = node_03
    node_02.left = node_04
    node_02.right = node_05
    solution.Mirror(node_01)
    print node_01.val
    print node_01.left.val
    print node_01.right.val
