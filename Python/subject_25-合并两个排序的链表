# -*- coding:utf-8 -*-
class ListNode:
    def __init__(self, x):
        self.val = x
        self.next = None

class Solution:
    """
    合并两个排序的链表
    """
    # 返回合并后列表
    def Merge(self, pHead1, pHead2):
        # write code here
        if pHead1 is None:
            return pHead2
        if pHead2 is None:
            return pHead1

        point_1 = pHead1
        point_2 = pHead2
        if point_1.val < point_2.val:
            result_head = point_1
            result_point = point_1
            point_1 = point_1.next
        else:
            result_head = point_2
            result_point = point_2
            point_2 = point_2.next
        while point_1 is not None and point_2 is not None:
            if point_1.val < point_2.val:
                result_point.next = point_1
                point_1 = point_1.next
            else:
                result_point.next = point_2
                point_2 = point_2.next
            result_point = result_point.next

        if point_1 is None:
            while point_2 is not None:
                result_point.next = point_2
                result_point = result_point.next
                point_2 = point_2.next
        else:
            while point_1 is not None:
                result_point.next = point_1
                result_point = result_point.next
                point_1 = point_1.next
        return result_head

if __name__ == '__main__':
    solution = Solution()
    node_1 = ListNode(1)
    node_2 = ListNode(2)
    node_3 = ListNode(3)
    node_4 = ListNode(4)
    node_5 = ListNode(5)
    node_6 = ListNode(6)
    node_7 = ListNode(7)

    node_1.next = node_3
    node_3.next = node_5

    node_2.next = node_4
    node_4.next = node_6

    result = solution.Merge(node_1, node_2)

    while result is not None:
        print result.val
        result = result.next
